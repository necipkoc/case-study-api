{
    "info": {
        "_postman_id": "case-study-api-collection",
        "name": "Case Study API Collection",
        "description": "Kapsamlƒ± E-Ticaret Platformu API Test Koleksiyonu\n\nüè™ **Case Study API v1.0**\n\nBu koleksiyon e-ticaret platformunun t√ºm endpoint'lerini test etmenizi saƒülar.\n\n## üìã Test Sƒ±rasƒ±\n1. **Authentication** - Kayƒ±t ol ve giri≈ü yap\n2. **Categories** - Kategorileri listele\n3. **Products** - √úr√ºnleri listele ve detay g√∂r\n4. **Cart Operations** - Sepet i≈ülemleri\n5. **Order Management** - Sipari≈ü olu≈ütur ve y√∂net\n6. **Admin Operations** - Kategori ve √ºr√ºn y√∂netimi\n\n## üîê Authentication\n- JWT Bearer Token kullanƒ±lƒ±r\n- Token otomatik olarak environment variable'a kaydedilir\n- Her korumalƒ± endpoint i√ßin token gereklidir\n\n## üåç Environment Variables\n- `{{base_url}}` - API base URL (http://localhost:8000/api)\n- `{{token}}` - JWT authentication token\n- `{{user_id}}` - Giri≈ü yapan kullanƒ±cƒ± ID'si",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "Authentication",
            "item": [
                {
                    "name": "Register - Kullanƒ±cƒ± Kaydƒ±",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "// Response status kontrol√º",
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "// Response yapƒ±sƒ± kontrol√º",
                                    "pm.test(\"Response has required fields\", function () {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.expect(responseJson).to.have.property('user');",
                                    "    pm.expect(responseJson).to.have.property('token');",
                                    "});",
                                    "",
                                    "// Token'ƒ± environment variable'a kaydet",
                                    "if (pm.response.code === 201) {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.environment.set('token', responseJson.token);",
                                    "    pm.environment.set('user_id', responseJson.user.id);",
                                    "    console.log('‚úÖ Token kaydedildi:', responseJson.token.substring(0, 20) + '...');",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Test Kullanƒ±cƒ±\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\",\n    \"password_confirmation\": \"password123\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/register",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "register"
                            ]
                        },
                        "description": "Yeni kullanƒ±cƒ± kaydƒ± olu≈üturur.\n\n**Gerekli Alanlar:**\n- name: Kullanƒ±cƒ± adƒ±\n- email: E-posta adresi (benzersiz)\n- password: ≈ûifre (min 8 karakter)\n- password_confirmation: ≈ûifre doƒürulamasƒ±\n\n**Response:**\n- user: Kullanƒ±cƒ± bilgileri\n- token: JWT authentication token"
                    }
                },
                {
                    "name": "Login - Kullanƒ±cƒ± Giri≈üi",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Login successful\", function () {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.expect(responseJson).to.have.property('user');",
                                    "    pm.expect(responseJson).to.have.property('token');",
                                    "});",
                                    "",
                                    "// Token'ƒ± g√ºncelle",
                                    "if (pm.response.code === 200) {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.environment.set('token', responseJson.token);",
                                    "    pm.environment.set('user_id', responseJson.user.id);",
                                    "    console.log('‚úÖ Giri≈ü ba≈üarƒ±lƒ±, token g√ºncellendi');",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/login",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "login"
                            ]
                        },
                        "description": "Mevcut kullanƒ±cƒ± giri≈üi.\n\n**Gerekli Alanlar:**\n- email: Kayƒ±tlƒ± e-posta adresi\n- password: Kullanƒ±cƒ± ≈üifresi"
                    }
                },
                {
                    "name": "Profile - Profil G√∂r√ºnt√ºle",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Profile data exists\", function () {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.expect(responseJson).to.have.property('id');",
                                    "    pm.expect(responseJson).to.have.property('name');",
                                    "    pm.expect(responseJson).to.have.property('email');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/profile",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "profile"
                            ]
                        },
                        "description": "Giri≈ü yapan kullanƒ±cƒ±nƒ±n profil bilgilerini g√∂r√ºnt√ºler.\n\n**Authorization:** Bearer Token gerekli"
                    }
                },
                {
                    "name": "Logout - √áƒ±kƒ±≈ü Yap",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/logout",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "logout"
                            ]
                        },
                        "description": "Kullanƒ±cƒ±yƒ± sistemden √ßƒ±karƒ±r ve token'ƒ± ge√ßersiz kƒ±lar."
                    }
                }
            ],
            "description": "Kullanƒ±cƒ± kimlik doƒürulama i≈ülemleri"
        },
        {
            "name": "Categories",
            "item": [
                {
                    "name": "List Categories - Kategorileri Listele",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Categories list exists\", function () {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.expect(responseJson).to.be.an('array');",
                                    "});",
                                    "",
                                    "// ƒ∞lk kategori ID'sini kaydet",
                                    "if (pm.response.json().length > 0) {",
                                    "    pm.environment.set('category_id', pm.response.json()[0].id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/categories",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "categories"
                            ],
                            "query": [
                                {
                                    "key": "search",
                                    "value": "",
                                    "disabled": true
                                }
                            ]
                        },
                        "description": "T√ºm kategorileri listeler. Bu endpoint herkese a√ßƒ±ktƒ±r.\n\n**Query Parameters:**\n- search (opsiyonel): Kategori adƒ±nda arama"
                    }
                },
                {
                    "name": "Create Category - Kategori Olu≈ütur",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "// Olu≈üturulan kategori ID'sini kaydet",
                                    "if (pm.response.code === 201) {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.environment.set('new_category_id', responseJson.id);",
                                    "    console.log('‚úÖ Yeni kategori olu≈üturuldu, ID:', responseJson.id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Test Kategori\",\n    \"description\": \"API testi i√ßin olu≈üturulan kategori\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/categories",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "categories"
                            ]
                        },
                        "description": "Yeni kategori olu≈üturur.\n\n**Authorization:** Bearer Token gerekli\n**Gerekli Alanlar:**\n- name: Kategori adƒ± (benzersiz)\n- description: Kategori a√ßƒ±klamasƒ± (opsiyonel)"
                    }
                }
            ],
            "description": "Kategori y√∂netimi i≈ülemleri"
        },
        {
            "name": "Products",
            "item": [
                {
                    "name": "List Products - √úr√ºnleri Listele",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "// ƒ∞lk √ºr√ºn ID'sini kaydet",
                                    "const responseJson = pm.response.json();",
                                    "if (responseJson.data && responseJson.data.length > 0) {",
                                    "    pm.environment.set('product_id', responseJson.data[0].id);",
                                    "    console.log('‚úÖ ƒ∞lk √ºr√ºn ID kaydedildi:', responseJson.data[0].id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/products?page=1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "products"
                            ],
                            "query": [
                                {
                                    "key": "page",
                                    "value": "1"
                                },
                                {
                                    "key": "category_id",
                                    "value": "",
                                    "disabled": true
                                },
                                {
                                    "key": "search",
                                    "value": "",
                                    "disabled": true
                                },
                                {
                                    "key": "min_price",
                                    "value": "",
                                    "disabled": true
                                },
                                {
                                    "key": "max_price",
                                    "value": "",
                                    "disabled": true
                                }
                            ]
                        },
                        "description": "T√ºm √ºr√ºnleri sayfalƒ± olarak listeler.\n\n**Query Parameters:**\n- page: Sayfa numarasƒ±\n- category_id: Kategori filtreleme\n- search: √úr√ºn adƒ±nda arama\n- min_price: Minimum fiyat\n- max_price: Maksimum fiyat"
                    }
                },
                {
                    "name": "Product Detail - √úr√ºn Detayƒ±",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/products/{{product_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "products",
                                "{{product_id}}"
                            ]
                        },
                        "description": "Belirli bir √ºr√ºn√ºn detaylarƒ±nƒ± g√∂r√ºnt√ºler.\n\n**URL Parameters:**\n- id: √úr√ºn ID'si"
                    }
                },
                {
                    "name": "Create Product - √úr√ºn Olu≈ütur",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.environment.set('new_product_id', responseJson.id);",
                                    "    console.log('Yeni √ºr√ºn olu≈üturuldu, ID:', responseJson.id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Test √úr√ºn\",\n    \"description\": \"API testi i√ßin olu≈üturulan √ºr√ºn\",\n    \"price\": 99.99,\n    \"stock_quantity\": 50,\n    \"category_id\": 1\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/products",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "products"
                            ]
                        },
                        "description": "Yeni √ºr√ºn olu≈üturur.\n\n**Authorization:** Bearer Token gerekli\n**Gerekli Alanlar:**\n- name: √úr√ºn adƒ±\n- price: √úr√ºn fiyatƒ±\n- stock_quantity: Stok miktarƒ±\n- category_id: Kategori ID'si"
                    }
                }
            ],
            "description": "√úr√ºn y√∂netimi i≈ülemleri"
        },
        {
            "name": "Cart Operations",
            "item": [
                {
                    "name": "View Cart - Sepeti G√∂r√ºnt√ºle",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Cart structure is correct\", function () {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.expect(responseJson).to.have.property('items');",
                                    "    pm.expect(responseJson).to.have.property('total_price');",
                                    "    pm.expect(responseJson).to.have.property('total_items');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/cart",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "cart"
                            ]
                        },
                        "description": "Kullanƒ±cƒ±nƒ±n sepet i√ßeriƒüini g√∂r√ºnt√ºler."
                    }
                },
                {
                    "name": "Add to Cart - Sepete Ekle",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Product added to cart\", function () {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.expect(responseJson.message).to.include('sepete eklendi');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"product_id\": {{product_id}},\n    \"quantity\": 2\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/cart/add",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "cart",
                                "add"
                            ]
                        },
                        "description": "Sepete √ºr√ºn ekler.\n\n**Gerekli Alanlar:**\n- product_id: Eklenecek √ºr√ºn ID'si\n- quantity: Eklenecek miktar"
                    }
                },
                {
                    "name": "Update Cart - Sepet G√ºncelle",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"product_id\": {{product_id}},\n    \"quantity\": 3\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/cart/update",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "cart",
                                "update"
                            ]
                        },
                        "description": "Sepetteki √ºr√ºn miktarƒ±nƒ± g√ºnceller."
                    }
                },
                {
                    "name": "Remove from Cart - Sepetten Kaldƒ±r",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/cart/remove/{{product_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "cart",
                                "remove",
                                "{{product_id}}"
                            ]
                        },
                        "description": "Belirli √ºr√ºn√º sepetten kaldƒ±rƒ±r."
                    }
                },
                {
                    "name": "Clear Cart - Sepeti Temizle",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/cart/clear",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "cart",
                                "clear"
                            ]
                        },
                        "description": "Sepeti tamamen temizler."
                    }
                }
            ],
            "description": "Sepet y√∂netimi i≈ülemleri"
        },
        {
            "name": "Orders",
            "item": [
                {
                    "name": "Create Order - Sipari≈ü Olu≈ütur",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "if (pm.response.code === 201) {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.environment.set('order_id', responseJson.id);",
                                    "    console.log('‚úÖ Sipari≈ü olu≈üturuldu, ID:', responseJson.id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/orders",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "orders"
                            ]
                        },
                        "description": "Sepetteki √ºr√ºnlerden yeni sipari≈ü olu≈üturur.\n\n**Not:** Sepet otomatik olarak temizlenir."
                    }
                },
                {
                    "name": "List Orders - Sipari≈üleri Listele",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/orders?page=1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "orders"
                            ],
                            "query": [
                                {
                                    "key": "page",
                                    "value": "1"
                                },
                                {
                                    "key": "status",
                                    "value": "",
                                    "disabled": true
                                }
                            ]
                        },
                        "description": "Kullanƒ±cƒ±nƒ±n sipari≈ülerini listeler.\n\n**Query Parameters:**\n- page: Sayfa numarasƒ±\n- status: Sipari≈ü durumu filtresi"
                    }
                },
                {
                    "name": "Order Detail - Sipari≈ü Detayƒ±",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/orders/{{order_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "orders",
                                "{{order_id}}"
                            ]
                        },
                        "description": "Belirli sipari≈üin detaylarƒ±nƒ± g√∂r√ºnt√ºler."
                    }
                },
                {
                    "name": "Order Stats - Sipari≈ü ƒ∞statistikleri",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/orders-stats",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "orders-stats"
                            ]
                        },
                        "description": "Kullanƒ±cƒ±nƒ±n sipari≈ü istatistiklerini g√∂r√ºnt√ºler."
                    }
                }
            ],
            "description": "Sipari≈ü y√∂netimi i≈ülemleri"
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "// Global pre-request script",
                    "console.log('API Request:', pm.request.method, pm.request.url);"
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "// Global test script",
                    "console.log('Response Status:', pm.response.code, pm.response.status);",
                    "console.log('Response Time:', pm.response.responseTime + 'ms');",
                    "",
                    "// JSON format kontrol√º",
                    "if (pm.response.headers.get('Content-Type') && pm.response.headers.get('Content-Type').includes('application/json')) {",
                    "    pm.test('Response is JSON', function() {",
                    "        pm.response.to.be.json;",
                    "    });",
                    "}"
                ]
            }
        }
    ],
    "variable": [
        {
            "key": "base_url",
            "value": "http://localhost:8000/api",
            "type": "string"
        }
    ]
}
